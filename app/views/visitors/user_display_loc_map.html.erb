<header class="site-header">
  <%= render partial: 'layouts/nav'%>
  <marquee behavior="" direction="">Mechanics near your location : click on any pin to show details</marquee>
    <!--The div element for the user-map -->
    <div id="map" style="width: 70%;" class="site-header">
    </div>
    <div class="card">
      <div class="image">
          <img src="/assets/user1.jpg">
      </div>
      <div class="title">
          <h1>
              Name
          </h1>
      </div>
      <div class="des">
          <p>Contact number.........</p>
          <a href="/mechanic_profile">
              <button>Read More...</button>
          </a>
      </div>
    </div>
</header>

<script type="text/javascript">
    function initMap() {
        var options = {
        zoom: 6,
        center: { lat: 15.9129, lng: 79.7400 }
        }
        var map = new google.maps.Map(document.getElementById('map'), options);
        var markers = [
        {
            coords: { lat: 14.4219223, lng: 77.7158541 },
            content: '<h1>Hari Krishna</h1>'
        }
        ];
    
        for (var i = 0; i < markers.length; i++) {
        addMarker(markers[i]);
        }
    
        function addMarker(props) {
        var marker = new google.maps.Marker({
            position: props.coords,
            map: map,
        });
    
        if (props.iconImage) {
            marker.setIcon(props.iconImage);
        }
    
        if (props.content) {
            var infoWindow = new google.maps.InfoWindow({
            content: props.content
            });
    
            marker.addListener('click', function () {
            infoWindow.open(map, marker);
            });
        }
        }
        infoWindow = new google.maps.InfoWindow();
        const locationButton = document.createElement("button");
        locationButton.textContent = "Pan to Current Location";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        locationButton.addEventListener("click", () => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
            (position) => {
                const pos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude,
                };
                map.zoom = 18;
                console.log(position.coords.latitude);
                console.log(position.coords.longitude);
                infoWindow.setPosition(pos);
                infoWindow.setContent("Location found.");
                infoWindow.open(map);
                map.setCenter(pos);
            },
            () => {
                handleLocationError(true, infoWindow, map.getCenter());
            }
            );
        } else {
            handleLocationError(false, infoWindow, map.getCenter());
        }
        });
    }
    
    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
        browserHasGeolocation
            ? "Error: The Geolocation service failed."
            : "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);
    }
  
</script>